/*! pinny 1.0.0 2014-08-15 */
(function(t){"function"==typeof define&&define.amd?define(["bouncefix","selectorEngine","velocity","zappy","shade"],t):t(window.Zepto||window.jQuery)})(function(t,i){function n(t,i){this._init(t,i)}var o="pinny",e=function(){},s="pinny--is-open";return n.VERSION="1.0.0",n.DEFAULTS={position:function(){throw"You must specify a position function that instructs Pinny how to open."},title:"Pinny",open:e,opened:e,close:e,closed:e,zIndex:2,coverage:"90%",easing:"swing",duration:150},n.prototype._init=function(o,e){var s=this,p=i(document.body);this.options=i.extend(!0,{},n.DEFAULTS,e),this.$pinny=i("<div />").appendTo(p).addClass("pinny").css({position:"fixed",zIndex:this.options.zIndex,width:this.options.coverage,height:this.options.coverage}),this.options.title&&(this.$title=i("<div />").addClass("pinny__title").html(this.options.title).prependTo(this.$pinny),i("<button />").html("&times").addClass("pinny__close").appendTo(this.$title).on("click",function(t){t.preventDefault(),s.close()})),this.$content=i("<div />").addClass("pinny__content").appendTo(this.$pinny),i(o).appendTo(this.$content).show(),t.add("pinny__content"),this.$shade=p.shade({click:function(){s.close()}}),this.position=this.options.position,this._bindEvents()},n.prototype._trigger=function(t,n){t in this.options&&this.options[t].call(this,i.Event(o+":"+t,{bubbles:!1}),n)},n.prototype._bindEvents=function(){},n.prototype.toggle=function(){this[this.$pinny.hasClass(s)?"close":"open"]()},n.prototype.open=function(){this._trigger("open"),this.$shade.shade("open"),this._open(),this._trigger("opened")},n.prototype.close=function(){this._trigger("close"),this.$shade.shade("close"),this.$pinny.removeClass(s),this._trigger("closed"),this.$pinny.velocity("reverse",{begin:function(){i("html").css("position","").css("top",""),window.scrollTo(0,scrollPos)},easing:this.options.easing,duration:this.options.duration,display:"none"})},n.prototype._open=function(){$item=this.$pinny,$content=this.$content,$title=this.$title,this.position(this.$pinny),this.$pinny.velocity({translateY:["100%","100%"]},0).velocity({translateY:0},{begin:function(){scrollPos=i(window).scrollTop(),i("html").css("position","fixed").css("top",-1*scrollPos)},easing:this.options.easing,duration:this.options.duration,display:"block",complete:function(){console.log($item.height()),console.log($title.height()),$content.height($item.height()-$title.height()-40)}})},n.prototype._getHeight=function(t){return parseFloat(i.Velocity.CSS.getPropertyValue(t[0],"height"))},i.fn.pinny=function(t){var e=Array.prototype.slice.call(arguments);return this.each(function(){var s=i(this),p=s.data(o),h="string"==typeof t;if(!p){if(h)throw'cannot call methods on pinny prior to initialization; attempted to call method "'+t+'"';s.data(o,p=new n(this,t))}if(h){if("_"===t.charAt(0)||"function"!=typeof p[t])throw'no such method "'+t+'" for pinny';p[t].apply(p,e.length>1?e.slice(1):null)}})},i.fn.pinny.Constructor=n,i("[data-pinny]").pinny(),i});